import{r as n,o as s,c as a,a as p,w as t,F as e,b as o,d as c}from"./app.636d0761.js";const l={},u=p("h1",{id:"liuli-util-i18next-util",tabindex:"-1"},[p("a",{class:"header-anchor",href:"#liuli-util-i18next-util","aria-hidden":"true"},"#"),o(" @liuli-util/i18next-util")],-1),i=p("h2",{id:"简介",tabindex:"-1"},[p("a",{class:"header-anchor",href:"#简介","aria-hidden":"true"},"#"),o(" 简介")],-1),r=o("对 i18next 的简单封装，用于结合 "),k=o("i18next-dts-gen"),b=o(" 一起使用提供简单国际化的开发体验。"),d=c('<h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2><p>创建全局变量</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// constants/i18n.ts</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> I18n <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@liuli-util/i18next-util&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> TranslateParams <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../i18n&#39;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> i18n <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">I18n<span class="token operator">&lt;</span>TranslateParams<span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>下面是在 nodejs 中使用</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// src/bin.ts</span>\n<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getLanguage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> language <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">osLocale</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token keyword">const</span> map<span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> LanguageEnum<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token string">&#39;zh-CN&#39;</span><span class="token operator">:</span> LanguageEnum<span class="token punctuation">.</span>ZhCN<span class="token punctuation">,</span>\n    <span class="token string">&#39;en-US&#39;</span><span class="token operator">:</span> LanguageEnum<span class="token punctuation">.</span>EnUS<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">return</span> map<span class="token punctuation">[</span>language<span class="token punctuation">]</span> <span class="token operator">||</span> LanguageEnum<span class="token punctuation">.</span>EnUS\n<span class="token punctuation">}</span>\n\n<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">await</span> i18n<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token function">getLanguage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i18n<span class="token punctuation">.</span><span class="token function">t</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;liuli&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>或者在浏览器中</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// src/App.tsx</span>\n<span class="token keyword">function</span> <span class="token function">getLanguage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> navigator<span class="token punctuation">.</span>language<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&#39;zh&#39;</span><span class="token punctuation">)</span>\n    <span class="token operator">?</span> LanguageEnum<span class="token punctuation">.</span>ZhCN\n    <span class="token operator">:</span> LanguageEnum<span class="token punctuation">.</span>En\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token constant">FC</span><span class="token operator">&lt;</span>AppProps<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token function">useMount</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">await</span> i18n<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">{</span> en<span class="token punctuation">,</span> zhCN <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token function">getLanguage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token comment">// 然后再做其它的事情</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n  <span class="token keyword">return</span> <span class="token operator">&lt;</span>div <span class="token operator">/</span><span class="token operator">&gt;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div>',7);l.render=function(o,c){const l=n("RouterLink");return s(),a(e,null,[u,i,p("p",null,[r,p(l,{to:"/zh/tools/i18next-dts-gen/"},{default:t((()=>[k])),_:1}),b]),d],64)};export default l;
